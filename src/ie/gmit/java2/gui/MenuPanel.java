/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ie.gmit.java2.gui;

import ie.gmit.java2.TextAnalyser;
import ie.gmit.java2.parser.Parser;
import ie.gmit.java2.thirdparty.TextPrompt;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class MenuPanel extends javax.swing.JPanel {

    /**
     * Creates new form MenuPanel
     * @param parentLayer - javax.swing.JLayeredPane
     */
    
    public MenuPanel(javax.swing.JLayeredPane parentLayer) {
        initComponents();
        //Set the parent layer
        this.parentLayer=parentLayer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SoruceButtonGroup = new javax.swing.ButtonGroup();
        jLayeredPaneParser = new javax.swing.JLayeredPane();
        jFileRadio = new javax.swing.JRadioButton();
        this.jFileRadio.setText("File");
        jURLRadio = new javax.swing.JRadioButton();
        jButtonParse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButtonBrowse = new javax.swing.JButton();
        jTextFieldURL = new javax.swing.JTextField();
        jLabelWrongPath = new javax.swing.JLabel();
        //Make the message invisible
        this.jLabelWrongPath.setVisible(false);
        //Position the text to the center
        this.jLabelWrongPath.setHorizontalAlignment(SwingConstants.CENTER);
        jRadioButtonJSOUP = new javax.swing.JRadioButton();

        setMaximumSize(new java.awt.Dimension(496, 295));
        setMinimumSize(new java.awt.Dimension(496, 295));
        setPreferredSize(new java.awt.Dimension(496, 295));

        jLayeredPaneParser.setMaximumSize(new java.awt.Dimension(496, 295));
        jLayeredPaneParser.setMinimumSize(new java.awt.Dimension(496, 295));

        SoruceButtonGroup.add(jFileRadio);
        jFileRadio.setMnemonic('F');
        jFileRadio.setSelected(true);
        jFileRadio.setText("File");
        jFileRadio.setToolTipText("");
        jFileRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileRadioActionPerformed(evt);
            }
        });

        SoruceButtonGroup.add(jURLRadio);
        jURLRadio.setMnemonic('D');
        jURLRadio.setText("Document from URL");
        jURLRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jURLRadioActionPerformed(evt);
            }
        });

        jButtonParse.setMnemonic('e');
        jButtonParse.setText("Parse File");
        jButtonParse.setEnabled(false);
        jButtonParse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonParseActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose what would you like to parse:");

        jButtonBrowse.setMnemonic('w');
        jButtonBrowse.setText("Browse");
        jButtonBrowse.setPreferredSize(new java.awt.Dimension(80, 23));
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });
        jLayeredPane1.setLayer(jButtonBrowse, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jButtonBrowse);
        jButtonBrowse.setBounds(0, 0, 80, 23);

        //Hide field
        this.jTextFieldURL.setVisible(false);
        //Add placeholder
        new TextPrompt("URL",this.jTextFieldURL);
        jTextFieldURL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldURLMouseReleased(evt);
            }
        });
        jTextFieldURL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldURLKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldURL);
        jTextFieldURL.setBounds(0, 0, 280, 20);

        jLabelWrongPath.setForeground(new java.awt.Color(255, 0, 0));
        jLabelWrongPath.setText("The path is not avalibale or does not exist.");

        SoruceButtonGroup.add(jRadioButtonJSOUP);
        jRadioButtonJSOUP.setMnemonic('J');
        jRadioButtonJSOUP.setText("URL (Stripped with JSOUP)");
        jRadioButtonJSOUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonJSOUPActionPerformed(evt);
            }
        });

        jLayeredPaneParser.setLayer(jFileRadio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jURLRadio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jButtonParse, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jLayeredPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jLabelWrongPath, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneParser.setLayer(jRadioButtonJSOUP, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneParserLayout = new javax.swing.GroupLayout(jLayeredPaneParser);
        jLayeredPaneParser.setLayout(jLayeredPaneParserLayout);
        jLayeredPaneParserLayout.setHorizontalGroup(
            jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneParserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneParserLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jLayeredPaneParserLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonJSOUP)
                                    .addComponent(jFileRadio)
                                    .addComponent(jURLRadio))
                                .addGap(18, 18, 18)
                                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPaneParserLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonParse)
                            .addComponent(jLabelWrongPath, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jLayeredPaneParserLayout.setVerticalGroup(
            jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneParserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFileRadio)
                .addGap(0, 0, 0)
                .addGroup(jLayeredPaneParserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneParserLayout.createSequentialGroup()
                        .addComponent(jURLRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonJSOUP))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonParse, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelWrongPath, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );

        jFileRadio.getAccessibleContext().setAccessibleName("ie.gmit.java2.parser.FileParser");
        jFileRadio.getAccessibleContext().setAccessibleDescription("File");
        jURLRadio.getAccessibleContext().setAccessibleName("ie.gmit.java2.parser.UrlParser");
        jURLRadio.getAccessibleContext().setAccessibleDescription("URL Document");
        jRadioButtonJSOUP.getAccessibleContext().setAccessibleName("ie.gmit.java2.parser.JsoupParser");
        jRadioButtonJSOUP.getAccessibleContext().setAccessibleDescription("URL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPaneParser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPaneParser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     *Set Action Performed event listener to the file radio button
     *@param evt - java.awt.event.ActionEvent
     */
    private void jFileRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileRadioActionPerformed
        //Toggle to file chooser
        this.toggleChooser(((javax.swing.JRadioButton)evt.getSource()));
    }//GEN-LAST:event_jFileRadioActionPerformed
    
    /**
     *Set Action Performed event listener to the url radio button
     *@param evt - java.awt.event.ActionEvent
     */
    private void jURLRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jURLRadioActionPerformed
        //Toggle to url field
        this.toggleChooser(((javax.swing.JRadioButton)evt.getSource()));
    }//GEN-LAST:event_jURLRadioActionPerformed
    
    /**
     *Set Action Performed event listener to the parse button
     *The function will check if the source is available then it will read in and finally create the new Results Collection Panel and switch to that panel 
     *@param evt - java.awt.event.ActionEvent
     */
    private void jButtonParseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParseActionPerformed
        try {
            //System.out.println(this.parserClass);
            
            //Instantiate the parser object
            this.instantiaeParserObject();

            //Set the please wait
            this.jLabelWrongPath.setText("Please Wait...");
            this.jLabelWrongPath.setVisible(true);
            this.jButtonParse.setEnabled(false);
                      
            //Place the file/url loading in a thread
            ie.gmit.java2.TextAnalyser.runThread(()->{
                //"Start the timer" for parsing time
                final long start = System.nanoTime();   
                //Check if the source is available.
                if(this.parserObject.availableSource()){
                        
                        try{
                            //Buffer the content, also check if it could be buffered
                            if(this.parserObject.bufferContent("\\s+",true)){    
                                //Create the results panel
                                //Pass a clone of the parsed lines and the parser object itself to the results collection
                                 ResultsCollectionPanel resultPanel= new ie.gmit.java2.gui.ResultsCollectionPanel(this.parserObject.getParsedLines(), this.parserObject.clone());

                                //Set time in millisecs
                                resultPanel.setLoadingTime((System.nanoTime() - start) / 1000000);
                                //Set the menu panel to hidden
                                this.setVisible(false);
                                //Add the result panel to the parent layer
                                this.parentLayer.add(resultPanel);
                            }else{
                                //Show an error message if the content could not be buffered
                                this.setErrorMessage("The content could not be read. Please try again.");
                            }
                        }catch(CloneNotSupportedException e){
                             //If any exception caught then log it
                             ie.gmit.java2.TextAnalyser.LOG.debug(e.getMessage(), e);
                             //Show an error message
                             this.setErrorMessage("Something went wrong. Please try again.");
                        }
                }else{
                    //Show the error message
                    this.setErrorMessage(this.parserObject.getErrorMessage());
                }
            });
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            //If any exception caught then log it
            TextAnalyser.LOG.debug(ex.getMessage(), ex);
            //Show an error message
            this.setErrorMessage("Something went wrong. Please try again.");
        }

    }//GEN-LAST:event_jButtonParseActionPerformed
    
    /**
     * Sets the error message in the label then enables the parse button
     * @param message -String 
     */
    private void setErrorMessage(String message){
        //Set the error if the source is not available.
        this.jLabelWrongPath.setText(message);
        //Show the error
        this.jLabelWrongPath.setVisible(true);
        //Enable the parser button again
        this.jButtonParse.setEnabled(true);
    }
    
    /**
     *Check which parser is being used then it will create a new instance of that class
     * @throws ClassNotFoundException
     * @throws InstantiationException
     * @throws IllegalAccessException
     * @throws ClassNotFoundException
     */
    private void instantiaeParserObject() throws ClassNotFoundException, InstantiationException, IllegalAccessException{
            //Get the class from string
            Class<?> c= Class.forName(this.parserClass);
            //Create the object from the class
            switch(this.parserClass){
                case "ie.gmit.java2.parser.JsoupParser":
                    this.parserObject = (ie.gmit.java2.parser.JsoupParser)c.newInstance();
                    //Set the source
                    this.parserObject.setSource(this.jTextFieldURL.getText().trim());
                    break;
                case "ie.gmit.java2.parser.UrlParser":
                    this.parserObject = (ie.gmit.java2.parser.UrlParser)c.newInstance();
                    //Set the source
                    this.parserObject.setSource(this.jTextFieldURL.getText().trim());
                    break;
                case "ie.gmit.java2.parser.FileParser":
                    this.parserObject = (ie.gmit.java2.parser.FileParser)c.newInstance();
                    //Set the source
                    this.parserObject.setSource(this.fileFromChooser);
                    break;
            }
            //This should never happen but just in case I added. It wont let the null pointer exception to come up
            if(this.parserObject==null) throw new ClassNotFoundException();
    }
    
    /**
     *Add the mouse release listener for the url field
     *@param evt - java.awt.event.MouseEvent
     */    
    private void jTextFieldURLMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldURLMouseReleased
         //Enable/disable the parse button
         this.canEnableParseButtonForUrl();
         
    }//GEN-LAST:event_jTextFieldURLMouseReleased
    
    /**
     *Add the key listener for the url field
     *@param evt - java.awt.event.KeyEvent
     */
    private void jTextFieldURLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldURLKeyReleased
         //Enable/disable the parse button
         this.canEnableParseButtonForUrl();
         //Check enter press
         this.enterPressed(evt);
    }//GEN-LAST:event_jTextFieldURLKeyReleased
    
    /**
     *Add the action performed to the JSOUP radio button
     *@param evt - java.awt.event.ActionEvent
     */
    private void jRadioButtonJSOUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonJSOUPActionPerformed
        //Toggle to url field
        this.toggleChooser(((javax.swing.JRadioButton)evt.getSource()));
    }//GEN-LAST:event_jRadioButtonJSOUPActionPerformed

    /**
     *Add the action performed to the browse button
     *@param evt - java.awt.event.ActionEvent
     */
    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
         //Create a new file chooser
        final JFileChooser fc = new JFileChooser();
        //Restrict to only text files
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt", "log");
        //Set the filter
        //fc.setFileFilter(filter);
        //show the file chooser and get the result of the window
        int returnVal = fc.showOpenDialog(MenuPanel.this);
        //If a file was chosen
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Get the file
            this.fileFromChooser = fc.getSelectedFile();
            //Set the parse button enabled
            this.jButtonParse.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonBrowseActionPerformed

   
    /**
     * Toggle between the file chooser and the url text field
     * @param Button - javax.swing.JRadioButton
     */
    private void toggleChooser(javax.swing.JRadioButton Button){
        //Check if it is file parser
        if(Button.getText().equals("File")){
            //Show file chooser
            this.jButtonBrowse.setVisible(true);
            //Hide url field
            this.jTextFieldURL.setVisible(false);
        }else{
            //Hide file chooser
            this.jButtonBrowse.setVisible(false);
            //Show url field
            this.jTextFieldURL.setVisible(true);
        }
        //Set parser class from the name of the clicked button
        this.parserClass=Button.getAccessibleContext().getAccessibleName();
        //Set the parser buttons text from the clicked butons description
        this.jButtonParse.setText("Parse "+Button.getAccessibleContext().getAccessibleDescription());
    }
    
    /**
     * Enable/disable the parse button
     */ 
    private void canEnableParseButtonForUrl(){
        //Enable the button if there is anything in the url field
        this.jButtonParse.setEnabled(this.jTextFieldURL.getText().trim().length()>0);
    }
    
    /**
     * Detect enter press in the url field
     * @params evt - java.awt.event.KeyEvent
     */
    private void enterPressed(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(this.jButtonParse.isEnabled()){
                this.jButtonParseActionPerformed(new java.awt.event.ActionEvent(new Object(),0,""));
            }
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup SoruceButtonGroup;
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonParse;
    private javax.swing.JRadioButton jFileRadio;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelWrongPath;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPaneParser;
    private javax.swing.JRadioButton jRadioButtonJSOUP;
    private javax.swing.JTextField jTextFieldURL;
    private javax.swing.JRadioButton jURLRadio;
    // End of variables declaration//GEN-END:variables
    //The returning file from the file choose
    private File fileFromChooser;
    //The initial parser class
    private String parserClass="ie.gmit.java2.parser.FileParser";
    //The parent layer
    private final javax.swing.JLayeredPane parentLayer;
    //The parser object
    private Parser parserObject = null;
}
