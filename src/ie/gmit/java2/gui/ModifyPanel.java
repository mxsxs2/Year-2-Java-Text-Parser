/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ie.gmit.java2.gui;

import ie.gmit.java2.parser.Processor;
import ie.gmit.java2.thirdparty.TextPrompt;
import java.awt.Component;

import javax.swing.JCheckBox;
import javax.swing.SwingConstants;

/**
 *
 * @author user
 */
public class ModifyPanel extends javax.swing.JPanel implements CanReturnProcessedContent{

    

    /**
     * Creates new form ModifyPanel
     * @param lines - ie.gmit.java2.parser.LinesMap
     */
    public ModifyPanel(ie.gmit.java2.parser.LinesMap lines) {
        initComponents();
        //Create a new processor
        this.processor = new Processor();
        //Add the lines to it
        this.processor.setLines(lines);
        
        //Initialize the remove index form
        this.initializeRemoveIndexForm();
        
         //Bind the event listeners to the check boxes(Too lazy to add one by one. Plus i can change it here rather then many different places)
        for(Component component:this.jLayeredPaneReplaceChecks.getComponents()){
            //Check if it is a check box
            if(component instanceof javax.swing.JCheckBox){
                //If it is a check box then bind the event listener
                ((javax.swing.JCheckBox)component).addActionListener((java.awt.event.ActionEvent evt) -> {
                    //Check if the button can be enabled or not
                    canReplace();
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPaneRemove = new javax.swing.JLayeredPane();
        jTextFieldRemove = new javax.swing.JTextField();
        jButtonRemove = new javax.swing.JButton();
        jLayeredPaneReplace = new javax.swing.JLayeredPane();
        jButtonReplace = new javax.swing.JButton();
        jTextFieldReplaceFrom = new javax.swing.JTextField();
        //Add placeholder
        new TextPrompt("From", this.jTextFieldReplaceFrom);
        jTextFieldReplaceTo = new javax.swing.JTextField();
        jLayeredPaneReplaceChecks = new javax.swing.JLayeredPane();
        jCheckBoxReplaceFirst = new javax.swing.JCheckBox();
        jCheckBoxReplaceLast = new javax.swing.JCheckBox();
        jCheckBoxReplaceAll = new javax.swing.JCheckBox();
        jLayeredPaneRemoveIndex = new javax.swing.JLayeredPane();
        jComboBoxLine = new javax.swing.JComboBox<>();
        jComboBoxWord = new javax.swing.JComboBox<>();
        jButtonRemoveIndex = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        //Align the text to center
        this.jLabel1.setHorizontalAlignment(SwingConstants.CENTER);

        setMaximumSize(new java.awt.Dimension(491, 267));
        setMinimumSize(new java.awt.Dimension(491, 267));
        setPreferredSize(new java.awt.Dimension(491, 267));

        jLayeredPaneRemove.setBorder(javax.swing.BorderFactory.createTitledBorder("Remove"));
        jLayeredPaneRemove.setMaximumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneRemove.setMinimumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneRemove.setPreferredSize(new java.awt.Dimension(153, 247));

        //Add placeholder
        new TextPrompt("Text to remove", this.jTextFieldRemove);
        jTextFieldRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldRemoveMouseReleased(evt);
            }
        });
        jTextFieldRemove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldRemoveKeyReleased(evt);
            }
        });

        jButtonRemove.setMnemonic('m');
        jButtonRemove.setText("Remove");
        jButtonRemove.setEnabled(false);
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jLayeredPaneRemove.setLayer(jTextFieldRemove, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneRemove.setLayer(jButtonRemove, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneRemoveLayout = new javax.swing.GroupLayout(jLayeredPaneRemove);
        jLayeredPaneRemove.setLayout(jLayeredPaneRemoveLayout);
        jLayeredPaneRemoveLayout.setHorizontalGroup(
            jLayeredPaneRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneRemoveLayout.createSequentialGroup()
                .addGroup(jLayeredPaneRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneRemoveLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jTextFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneRemoveLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButtonRemove)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneRemoveLayout.setVerticalGroup(
            jLayeredPaneRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneRemoveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRemove)
                .addContainerGap())
        );

        jLayeredPaneReplace.setBorder(javax.swing.BorderFactory.createTitledBorder("Replace"));
        jLayeredPaneReplace.setMaximumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneReplace.setMinimumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneReplace.setPreferredSize(new java.awt.Dimension(153, 247));
        jLayeredPaneReplace.setVerifyInputWhenFocusTarget(false);

        jButtonReplace.setMnemonic('p');
        jButtonReplace.setText("Replace");
        jButtonReplace.setEnabled(false);
        jButtonReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReplaceActionPerformed(evt);
            }
        });

        jTextFieldReplaceFrom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldReplaceFromMouseReleased(evt);
            }
        });
        jTextFieldReplaceFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReplaceFromKeyReleased(evt);
            }
        });

        //Add placeholder
        new TextPrompt("To", this.jTextFieldReplaceTo);
        jTextFieldReplaceTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextFieldReplaceToMouseReleased(evt);
            }
        });
        jTextFieldReplaceTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReplaceToKeyReleased(evt);
            }
        });

        jCheckBoxReplaceFirst.setMnemonic('F');
        jCheckBoxReplaceFirst.setText("First");
        jCheckBoxReplaceFirst.setName("first"); // NOI18N

        jCheckBoxReplaceLast.setMnemonic('L');
        jCheckBoxReplaceLast.setText("Last");
        jCheckBoxReplaceLast.setName("last"); // NOI18N

        jCheckBoxReplaceAll.setMnemonic('A');
        jCheckBoxReplaceAll.setSelected(true);
        jCheckBoxReplaceAll.setText("All");
        jCheckBoxReplaceAll.setName("all"); // NOI18N

        jLayeredPaneReplaceChecks.setLayer(jCheckBoxReplaceFirst, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReplaceChecks.setLayer(jCheckBoxReplaceLast, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReplaceChecks.setLayer(jCheckBoxReplaceAll, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneReplaceChecksLayout = new javax.swing.GroupLayout(jLayeredPaneReplaceChecks);
        jLayeredPaneReplaceChecks.setLayout(jLayeredPaneReplaceChecksLayout);
        jLayeredPaneReplaceChecksLayout.setHorizontalGroup(
            jLayeredPaneReplaceChecksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneReplaceChecksLayout.createSequentialGroup()
                .addComponent(jCheckBoxReplaceFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxReplaceLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxReplaceAll)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jLayeredPaneReplaceChecksLayout.setVerticalGroup(
            jLayeredPaneReplaceChecksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneReplaceChecksLayout.createSequentialGroup()
                .addGroup(jLayeredPaneReplaceChecksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxReplaceFirst)
                    .addComponent(jCheckBoxReplaceLast)
                    .addComponent(jCheckBoxReplaceAll))
                .addGap(0, 77, Short.MAX_VALUE))
        );

        jLayeredPaneReplace.setLayer(jButtonReplace, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReplace.setLayer(jTextFieldReplaceFrom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReplace.setLayer(jTextFieldReplaceTo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReplace.setLayer(jLayeredPaneReplaceChecks, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneReplaceLayout = new javax.swing.GroupLayout(jLayeredPaneReplace);
        jLayeredPaneReplace.setLayout(jLayeredPaneReplaceLayout);
        jLayeredPaneReplaceLayout.setHorizontalGroup(
            jLayeredPaneReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneReplaceLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jLayeredPaneReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPaneReplaceChecks)
                    .addComponent(jTextFieldReplaceTo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldReplaceFrom, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneReplaceLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButtonReplace)
                        .addGap(35, 35, 35)))
                .addGap(5, 5, 5))
        );
        jLayeredPaneReplaceLayout.setVerticalGroup(
            jLayeredPaneReplaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneReplaceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldReplaceFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldReplaceTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneReplaceChecks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jButtonReplace)
                .addContainerGap())
        );

        jLayeredPaneRemoveIndex.setBorder(javax.swing.BorderFactory.createTitledBorder("RemoveIndex"));
        jLayeredPaneRemoveIndex.setMaximumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneRemoveIndex.setMinimumSize(new java.awt.Dimension(151, 247));
        jLayeredPaneRemoveIndex.setPreferredSize(new java.awt.Dimension(153, 247));

        jComboBoxLine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLine.setToolTipText("");

        jComboBoxWord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonRemoveIndex.setMnemonic('o');
        jButtonRemoveIndex.setText("Remove");
        jButtonRemoveIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveIndexActionPerformed(evt);
            }
        });

        jLabel2.setText("Line");

        jLabel7.setText("Word");

        jLayeredPaneRemoveIndex.setLayer(jComboBoxLine, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneRemoveIndex.setLayer(jComboBoxWord, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneRemoveIndex.setLayer(jButtonRemoveIndex, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneRemoveIndex.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneRemoveIndex.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneRemoveIndexLayout = new javax.swing.GroupLayout(jLayeredPaneRemoveIndex);
        jLayeredPaneRemoveIndex.setLayout(jLayeredPaneRemoveIndexLayout);
        jLayeredPaneRemoveIndexLayout.setHorizontalGroup(
            jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxLine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGroup(jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonRemoveIndex)
                                .addGap(33, 33, 33))
                            .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jComboBoxWord, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        jLayeredPaneRemoveIndexLayout.setVerticalGroup(
            jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneRemoveIndexLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneRemoveIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(jButtonRemoveIndex)
                .addContainerGap())
        );

        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText(" ");
        jLabel1.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPaneRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPaneReplace, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPaneRemoveIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPaneReplace, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLayeredPaneRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLayeredPaneRemoveIndex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

  
    /**
     *Key release event listener for the remove field 
     *@param evt - java.awt.event.KeyEvent
     */
    private void jTextFieldRemoveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRemoveKeyReleased
        //Check if button can be enabled
        this.canRemove();
    }//GEN-LAST:event_jTextFieldRemoveKeyReleased

    /**
     *Mouse release event listener for the remove fie
     *@param evt - java.awt.event.MouseEvent
     */
    private void jTextFieldRemoveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRemoveMouseReleased
        //Check if button can be enabled
        this.canRemove();
    }//GEN-LAST:event_jTextFieldRemoveMouseReleased
    
    /**
     *Action performed listener for the remove button
     *Deletes every instance of the given String then sets a message
     *@param evt - java.awt.event.ActionEvent
     */
    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        //Remove the given text from the parsed object
        String text=this.jTextFieldRemove.getText().trim();
        this.processor.delete(text);
        //Set response
        this.jLabel1.setText("All instance of \""+text+"\" was removed.");
        //Reset form
        this.jTextFieldRemove.setText("");
        this.jButtonRemove.setEnabled(true);
        
    }//GEN-LAST:event_jButtonRemoveActionPerformed

   /**
     *Action performed listener for the remove index button
     *Deletes the given String then sets a message
     *@param evt - java.awt.event.ActionEvent
     */
    private void jButtonRemoveIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveIndexActionPerformed
        //Get line index
        int line=this.jComboBoxLine.getSelectedIndex();
        //Get word index
        int word=this.jComboBoxWord.getSelectedIndex();
        //Remove index
        this.processor.delete(new int[]{line,word});
        //Set response
        this.jLabel1.setText("Word "+(++word)+" at line "+(++line)+" was removed.");
        //Set the words after removing the on
        this.getWordsInLine();
    }//GEN-LAST:event_jButtonRemoveIndexActionPerformed

   /**
     *Action performed listener for the replace button
     *Replaces the given string from the filed with the other given string 
     *Depending on the modifiers it will delete the first,last or all of the occurrences
     *Will set a message when finished 
     *@param evt - java.awt.event.ActionEvent
     */
    private void jButtonReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReplaceActionPerformed
        //Get the value of the fields
        String from=this.jTextFieldReplaceFrom.getText().trim();
        String to=this.jTextFieldReplaceTo.getText().trim();
        //Get the check boxes;
        boolean first=this.jCheckBoxReplaceFirst.isSelected();
        boolean last =this.jCheckBoxReplaceLast.isSelected();
        boolean all  =this.jCheckBoxReplaceAll.isSelected();
        
        //Replace the string
        this.processor.replace(from, to, first, last, all);
        //Determine last part of response
        String lastPart="";
        if(all){
            lastPart="at all macthes.";
        }else if(first && last){
            lastPart="at first and last match.";
        }else if(first){
            lastPart="at first macth.";
        }else if(last){
            lastPart="at last match.";
        }
        //Set response
        this.jLabel1.setText("Word \""+from+"\" was replaced to \""+to+"\" "+lastPart);
        
        //Reset form
        this.jTextFieldReplaceFrom.setText("");
        this.jTextFieldReplaceTo.setText("");
        //Get all of the components from the check box layer 
        for(Component c: this.jLayeredPaneReplaceChecks.getComponents()){
                //Check if it is a check box
                if(c instanceof JCheckBox)
                    //Make the check box not selected
                    ((JCheckBox) c).setSelected(false);
        }
    }//GEN-LAST:event_jButtonReplaceActionPerformed
    
    /**
     *Key release listeners for the replace from fields
     *@param evt - java.awt.event.KeyEvent
     */
    private void jTextFieldReplaceFromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReplaceFromKeyReleased
         //Check if we can replace
        this.canReplace();
    }//GEN-LAST:event_jTextFieldReplaceFromKeyReleased

    /**
     *mouse release listeners for the replace from fields
     *@param evt - java.awt.event.MouseEvent
     */
    private void jTextFieldReplaceFromMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldReplaceFromMouseReleased
         //Check if we can replace
        this.canReplace();
    }//GEN-LAST:event_jTextFieldReplaceFromMouseReleased

    /**
     *Key release listeners for the replace to fields
     *@param evt - java.awt.event.KeyEvent
     */
    private void jTextFieldReplaceToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReplaceToKeyReleased
         //Check if we can replace
        this.canReplace();
    }//GEN-LAST:event_jTextFieldReplaceToKeyReleased

    /**
     *mouse release listeners for the replace to fields
     *@param evt - java.awt.event.MouseEvent
     */
    private void jTextFieldReplaceToMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldReplaceToMouseReleased
         //Check if we can replace
        this.canReplace();
    }//GEN-LAST:event_jTextFieldReplaceToMouseReleased

    /**
     *Check if the remove button can be enabled
     */
    private void canRemove(){
        if(this.jTextFieldRemove.getText().trim().length()>0) this.jButtonRemove.setEnabled(true);
        else this.jButtonRemove.setEnabled(false);
    }
    
    /**
     *Get number of words in the a given line
     */
    private void getWordsInLine(){
        
        //Get the number of words
        int words=this.processor.getNumberOfWordsInLine(this.jComboBoxLine.getSelectedIndex());
        //Remove all previous items
        this.jComboBoxWord.removeAllItems();
        //Loop until we have words
        for(int i=1; i<=words; i++)
            //Add the number of word
            this.jComboBoxWord.addItem(i+"");
            //Decrement the number of words
    }
    
    /**
     *Initialize the remove index form
     */
    private void initializeRemoveIndexForm(){
        //Get size of object
        int[] count=this.processor.count();
        //Remove previous content of lines
        this.jComboBoxLine.removeAllItems();
        //Loop until we have lines
        for(int i=1; i<=count[0]; i++)
            //Add the number of line
            this.jComboBoxLine.addItem(i+"");
            //Decrement the number of words
        //Set the words
        this.getWordsInLine();
        
        //Have to add the action listener after the initialization. Otherwise getWordsInLine throws null pointer exception
        jComboBoxLine.addActionListener((java.awt.event.ActionEvent evt) -> {
            //Set the words
            getWordsInLine();
        });
    }
    
    /**
     *Check if the replace button can be active
     */
    public boolean canReplace(){
        //Check if the fields are filled
        if(this.jTextFieldReplaceFrom.getText().trim().length()>0 && this.jTextFieldReplaceTo.getText().trim().length()>0){
            //Get all of the components from the check box layer 
            for(Component c: this.jLayeredPaneReplaceChecks.getComponents()){
                //Check if it is a check box
                if(c instanceof JCheckBox){
                    //If the check box is checked
                    if(((JCheckBox) c).isSelected()){
                        //Enable the button
                        this.jButtonReplace.setEnabled(true);
                        //Return true as we need only one box to be checked
                        return true;
                    } 
                }
            }
        }
        //Disable the button
        this.jButtonReplace.setEnabled(false);
        return false;
    }
    
    
    @Override
    public void setProcessorContent(ie.gmit.java2.parser.LinesMap lines) {
        //Set the lines in the processor object
        this.processor.setLines(lines);
    }

    @Override
    public ie.gmit.java2.parser.LinesMap getProcessorContent() {
        //Return a copy of the lines from theprocessor
        return this.processor.getLines();
    }

    @Override
    public long getLastModifiedTime() {
        //Return the last modified time form the timestamp.
        return this.processor.getLastModifiedTime();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonRemoveIndex;
    private javax.swing.JButton jButtonReplace;
    private javax.swing.JCheckBox jCheckBoxReplaceAll;
    private javax.swing.JCheckBox jCheckBoxReplaceFirst;
    private javax.swing.JCheckBox jCheckBoxReplaceLast;
    private javax.swing.JComboBox<String> jComboBoxLine;
    private javax.swing.JComboBox<String> jComboBoxWord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPaneRemove;
    private javax.swing.JLayeredPane jLayeredPaneRemoveIndex;
    private javax.swing.JLayeredPane jLayeredPaneReplace;
    private javax.swing.JLayeredPane jLayeredPaneReplaceChecks;
    private javax.swing.JTextField jTextFieldRemove;
    private javax.swing.JTextField jTextFieldReplaceFrom;
    private javax.swing.JTextField jTextFieldReplaceTo;
    // End of variables declaration//GEN-END:variables
    //The proccessor object
    private final Processor processor;


}
